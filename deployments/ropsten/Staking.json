{
  "address": "0x8214210869038ca711A01f73285d963A387bC943",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_TeleportDAOToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "TDTAmount",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "TDTAmount",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "TeleportDAOToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "claimReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "earnedTDT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "TDTAmount",
          "type": "uint256"
        }
      ],
      "name": "equivalentStakingShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stakingShare",
          "type": "uint256"
        }
      ],
      "name": "equivalentTDT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "instantRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_instantRouter",
          "type": "address"
        }
      ],
      "name": "setInstantRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStakingShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_stakingShare",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x20ce36be748e87bdd82cf5c8685c82b2cdf3d10119016f7c4b231c5a4f3e433b",
  "receipt": {
    "to": null,
    "from": "0x5364E3557572bd5D5903C0e9C21BE359F2Eac1dA",
    "contractAddress": "0x8214210869038ca711A01f73285d963A387bC943",
    "transactionIndex": 0,
    "gasUsed": "558151",
    "logsBloom": "0x
    "blockHash": "0xfbfcd87c3ece4e6688a747527d99d7413423a5b933d6e7a6d1fff5d3b58a8787",
    "transactionHash": "0x20ce36be748e87bdd82cf5c8685c82b2cdf3d10119016f7c4b231c5a4f3e433b",
    "logs": [],
    "blockNumber": 12331676,
    "cumulativeGasUsed": "558151",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0B47E8d6F8Ea758aE125963974b10A016Da8ce36"
  ],
  "numDeployments": 1,
  "solcInputHash": "b766d894e7507eaf09e41e8de1c94935",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_TeleportDAOToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"TDTAmount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"TDTAmount\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TeleportDAOToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"earnedTDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"TDTAmount\",\"type\":\"uint256\"}],\"name\":\"equivalentStakingShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakingShare\",\"type\":\"uint256\"}],\"name\":\"equivalentTDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"instantRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_instantRouter\",\"type\":\"address\"}],\"name\":\"setInstantRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakingShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakingShare\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking/Staking.sol\":\"Staking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/erc20/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: <SPDX-License>\\npragma solidity 0.7.6;\\n\\ninterface IERC20 {\\n    // events\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    // read-only functions\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    // state-changing functions\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xbfce47b32957e65d24a0a087221880a77cde7bd13f0bb3af913cb9b0877ddad5\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: <SPDX-License>\\npragma solidity 0.7.6;\\n\\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\\n\\nlibrary SafeMath {\\n    function add(uint x, uint y) internal pure returns (uint z) {\\n        require((z = x + y) >= x, 'ds-math-add-overflow');\\n    }\\n\\n    function sub(uint x, uint y) internal pure returns (uint z) {\\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\\n    }\\n\\n    function mul(uint x, uint y) internal pure returns (uint z) {\\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\\n    }\\n    \\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b; //TODO: edit it\\n    }\\n}\\n\",\"keccak256\":\"0x8d7c458d27f34a0512d902ee3b662022a586ce1c27a79a0c260c676fd55c454d\"},\"contracts/staking/Staking.sol\":{\"content\":\"pragma solidity ^0.7.6;\\n\\nimport './interfaces/IStaking.sol';\\nimport '../libraries/SafeMath.sol';\\nimport '../erc20/interfaces/IERC20.sol';\\n\\ncontract Staking is IStaking {\\n\\n  using SafeMath for uint256;\\n  address override public owner;\\n  address public override TeleportDAOToken;\\n  address public override instantRouter;\\n  uint public override totalStakingShare;\\n  mapping(address => uint) override public stakingShare;\\n  mapping(address => uint) override public stakedAmount;\\n\\n  modifier onlyOwner {\\n    require(msg.sender == owner);\\n    _;\\n  }\\n\\n  constructor(address _TeleportDAOToken) public {\\n    TeleportDAOToken = _TeleportDAOToken;\\n    totalStakingShare = 0;\\n    owner = msg.sender;\\n  }\\n\\n  function changeOwner (address _owner) external override onlyOwner {\\n    owner = _owner;\\n  }\\n\\n  function setInstantRouter (address _instantRouter) external override onlyOwner {\\n      instantRouter = _instantRouter;\\n  }\\n\\n  function stake (address user, uint amount) external override {\\n    uint _stakingShare;\\n    if (totalTDTAmount() == 0) {\\n      _stakingShare = amount;\\n    } else {\\n      _stakingShare = amount*totalStakingShare/totalTDTAmount();\\n    }\\n    IERC20(TeleportDAOToken).transferFrom(msg.sender, address(this), amount);\\n    stakingShare[user] = stakingShare[user] + _stakingShare;\\n    stakedAmount[user] = stakedAmount[user] + amount;\\n    totalStakingShare = totalStakingShare + _stakingShare;\\n    emit Stake(user, amount);\\n  }\\n\\n  function unstake (address user, uint _stakingShare) public override {\\n    require(msg.sender == user || msg.sender == instantRouter, \\\"message sender is not correct\\\");\\n    require(stakingShare[user] >= _stakingShare, \\\"balance is not enough\\\");\\n    uint returnAmount = _stakingShare*totalTDTAmount()/totalStakingShare;\\n    stakingShare[user] = stakingShare[user] - _stakingShare;\\n    stakedAmount[user] = stakedAmount[user] - returnAmount;\\n    totalStakingShare = totalStakingShare - _stakingShare;\\n    IERC20(TeleportDAOToken).transfer(msg.sender, returnAmount);\\n    emit Unstake(user, returnAmount);\\n  }\\n\\n  function earnedTDT (address user) public view override returns (uint) {\\n    uint totalTDTAmount = totalTDTAmount();\\n    if (totalStakingShare != 0) {\\n      return (stakingShare[user]*totalTDTAmount/totalStakingShare) - stakedAmount[user];\\n    } else {\\n      return 0;\\n    }\\n  }\\n\\n  function claimReward (address user) external override returns (bool) {\\n    uint earnedTDT = earnedTDT(user);\\n    if (earnedTDT != 0) {\\n      uint equivalentStakingShare = equivalentStakingShare(earnedTDT);\\n      unstake(user, equivalentStakingShare); \\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  function equivalentStakingShare (uint TDTAmount) public override returns (uint) {\\n    uint totalTDTAmount = totalTDTAmount();\\n    if (totalTDTAmount != 0) {\\n      return TDTAmount*totalStakingShare/totalTDTAmount;\\n    } else {\\n      return 0;\\n    }\\n  }\\n\\n  function equivalentTDT (uint stakingShare) external override returns (uint) {\\n    if (totalStakingShare != 0) {\\n      return stakingShare*totalTDTAmount()/totalStakingShare;\\n    } else {\\n      return 0;\\n    }\\n  }\\n\\n  function totalTDTAmount () internal view returns (uint) {\\n    return IERC20(TeleportDAOToken).balanceOf(address(this));\\n  }\\n     \\n}\",\"keccak256\":\"0x8c1fb525fda263f070287f9d6914e5c5b4fa7cb99ae5c2a68c69d775c532fe2b\"},\"contracts/staking/interfaces/IStaking.sol\":{\"content\":\"pragma solidity ^0.7.6;\\n\\ninterface IStaking {\\n  // events\\n  event Stake(address user, uint TDTAmount);\\n  event Unstake(address user, uint TDTAmount);\\n\\n  // read-only functions\\n  function owner() external view returns (address);\\n  function TeleportDAOToken() external view returns (address);\\n  function instantRouter() external view returns (address);\\n  function totalStakingShare() external view returns(uint);\\n  function stakedAmount (address user) external returns(uint);\\n  function stakingShare (address user) external returns(uint);\\n  function earnedTDT (address user) external view returns (uint);\\n  \\n  // state-changing fucntions\\n  function changeOwner (address _owner) external;\\n  function setInstantRouter (address _instantRouter) external;\\n  function stake (address user, uint amount) external;\\n  function unstake (address user, uint _stakingShare) external;\\n  function claimReward (address user) external returns (bool);\\n  function equivalentStakingShare (uint TDTAmount) external returns (uint);\\n  function equivalentTDT (uint stakingShare) external returns (uint);\\n}\",\"keccak256\":\"0x35601c5143e0b1f5d359e0aaad2f471e7c0f8516d92b44374403af8560d9c446\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516108b53803806108b58339818101604052602081101561003357600080fd5b5051600180546001600160a01b039092166001600160a01b031992831617905560006003819055805490911633179055610843806100726000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a6f9dae11161008c578063c2a672e011610066578063c2a672e014610235578063d279c19114610261578063e35a0a881461029b578063f9931855146102a3576100ea565b8063a6f9dae1146101bd578063a9e01ba3146101e3578063adc9772e14610209576100ea565b806350906c4e116100c857806350906c4e1461015f578063870ba6cf146101855780638cc32a77146101ad5780638da5cb5b146101b5576100ea565b8063108f438d146100ef5780633b845eb9146101135780634d3d43e414610142575b600080fd5b6100f76102c9565b604080516001600160a01b039092168252519081900360200190f35b6101306004803603602081101561012957600080fd5b50356102d8565b60408051918252519081900360200190f35b6101306004803603602081101561015857600080fd5b503561030c565b6101306004803603602081101561017557600080fd5b50356001600160a01b031661033c565b6101ab6004803603602081101561019b57600080fd5b50356001600160a01b031661034e565b005b610130610387565b6100f761038d565b6101ab600480360360208110156101d357600080fd5b50356001600160a01b031661039c565b610130600480360360208110156101f957600080fd5b50356001600160a01b03166103d5565b6101ab6004803603604081101561021f57600080fd5b506001600160a01b038135169060200135610426565b6101ab6004803603604081101561024b57600080fd5b506001600160a01b03813516906020013561054b565b6102876004803603602081101561027757600080fd5b50356001600160a01b031661073a565b604080519115158252519081900360200190f35b6100f7610770565b610130600480360360208110156102b957600080fd5b50356001600160a01b031661077f565b6001546001600160a01b031681565b6000806102e3610791565b9050801561030157806003548402816102f857fe5b04915050610307565b60009150505b919050565b600060035460001461033457600354610323610791565b83028161032c57fe5b049050610307565b506000610307565b60046020526000908152604090205481565b6000546001600160a01b0316331461036557600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60035481565b6000546001600160a01b031681565b6000546001600160a01b031633146103b357600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806103e0610791565b9050600354600014610301576001600160a01b038316600090815260056020908152604080832054600354600490935292205483028161041c57fe5b0403915050610307565b6000610430610791565b61043b575080610453565b610443610791565b60035483028161044f57fe5b0490505b600154604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156104ad57600080fd5b505af11580156104c1573d6000803e3d6000fd5b505050506040513d60208110156104d757600080fd5b50506001600160a01b0383166000818152600460209081526040808320805486019055600582529182902080548601905560038054850190558151928352820184905280517febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a9281900390910190a1505050565b336001600160a01b038316148061056c57506002546001600160a01b031633145b6105bd576040805162461bcd60e51b815260206004820152601d60248201527f6d6573736167652073656e646572206973206e6f7420636f7272656374000000604482015290519081900360640190fd5b6001600160a01b038216600090815260046020526040902054811115610622576040805162461bcd60e51b81526020600482015260156024820152740c4c2d8c2dcc6ca40d2e640dcdee840cadcdeeaced605b1b604482015290519081900360640190fd5b600060035461062f610791565b83028161063857fe5b6001600160a01b03808616600090815260046020818152604080842080548a900390556005825280842080549790960496879003909555600380548990039055600154855163a9059cbb60e01b81523393810193909352602483018790529451959650939092169363a9059cbb936044808501949193918390030190829087803b1580156106c557600080fd5b505af11580156106d9573d6000803e3d6000fd5b505050506040513d60208110156106ef57600080fd5b5050604080516001600160a01b03851681526020810183905281517f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd929181900390910190a1505050565b600080610746836103d5565b90508015610301576000610759826102d8565b9050610765848261054b565b600192505050610307565b6002546001600160a01b031681565b60056020526000908152604090205481565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156107dc57600080fd5b505afa1580156107f0573d6000803e3d6000fd5b505050506040513d602081101561080657600080fd5b505190509056fea264697066735822122078692cbc249cadf25a5b4f88f19fc71793e02f9ccb1e4fa222343e741f1cbf0a64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a6f9dae11161008c578063c2a672e011610066578063c2a672e014610235578063d279c19114610261578063e35a0a881461029b578063f9931855146102a3576100ea565b8063a6f9dae1146101bd578063a9e01ba3146101e3578063adc9772e14610209576100ea565b806350906c4e116100c857806350906c4e1461015f578063870ba6cf146101855780638cc32a77146101ad5780638da5cb5b146101b5576100ea565b8063108f438d146100ef5780633b845eb9146101135780634d3d43e414610142575b600080fd5b6100f76102c9565b604080516001600160a01b039092168252519081900360200190f35b6101306004803603602081101561012957600080fd5b50356102d8565b60408051918252519081900360200190f35b6101306004803603602081101561015857600080fd5b503561030c565b6101306004803603602081101561017557600080fd5b50356001600160a01b031661033c565b6101ab6004803603602081101561019b57600080fd5b50356001600160a01b031661034e565b005b610130610387565b6100f761038d565b6101ab600480360360208110156101d357600080fd5b50356001600160a01b031661039c565b610130600480360360208110156101f957600080fd5b50356001600160a01b03166103d5565b6101ab6004803603604081101561021f57600080fd5b506001600160a01b038135169060200135610426565b6101ab6004803603604081101561024b57600080fd5b506001600160a01b03813516906020013561054b565b6102876004803603602081101561027757600080fd5b50356001600160a01b031661073a565b604080519115158252519081900360200190f35b6100f7610770565b610130600480360360208110156102b957600080fd5b50356001600160a01b031661077f565b6001546001600160a01b031681565b6000806102e3610791565b9050801561030157806003548402816102f857fe5b04915050610307565b60009150505b919050565b600060035460001461033457600354610323610791565b83028161032c57fe5b049050610307565b506000610307565b60046020526000908152604090205481565b6000546001600160a01b0316331461036557600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60035481565b6000546001600160a01b031681565b6000546001600160a01b031633146103b357600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806103e0610791565b9050600354600014610301576001600160a01b038316600090815260056020908152604080832054600354600490935292205483028161041c57fe5b0403915050610307565b6000610430610791565b61043b575080610453565b610443610791565b60035483028161044f57fe5b0490505b600154604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156104ad57600080fd5b505af11580156104c1573d6000803e3d6000fd5b505050506040513d60208110156104d757600080fd5b50506001600160a01b0383166000818152600460209081526040808320805486019055600582529182902080548601905560038054850190558151928352820184905280517febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a9281900390910190a1505050565b336001600160a01b038316148061056c57506002546001600160a01b031633145b6105bd576040805162461bcd60e51b815260206004820152601d60248201527f6d6573736167652073656e646572206973206e6f7420636f7272656374000000604482015290519081900360640190fd5b6001600160a01b038216600090815260046020526040902054811115610622576040805162461bcd60e51b81526020600482015260156024820152740c4c2d8c2dcc6ca40d2e640dcdee840cadcdeeaced605b1b604482015290519081900360640190fd5b600060035461062f610791565b83028161063857fe5b6001600160a01b03808616600090815260046020818152604080842080548a900390556005825280842080549790960496879003909555600380548990039055600154855163a9059cbb60e01b81523393810193909352602483018790529451959650939092169363a9059cbb936044808501949193918390030190829087803b1580156106c557600080fd5b505af11580156106d9573d6000803e3d6000fd5b505050506040513d60208110156106ef57600080fd5b5050604080516001600160a01b03851681526020810183905281517f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd929181900390910190a1505050565b600080610746836103d5565b90508015610301576000610759826102d8565b9050610765848261054b565b600192505050610307565b6002546001600160a01b031681565b60056020526000908152604090205481565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156107dc57600080fd5b505afa1580156107f0573d6000803e3d6000fd5b505050506040513d602081101561080657600080fd5b505190509056fea264697066735822122078692cbc249cadf25a5b4f88f19fc71793e02f9ccb1e4fa222343e741f1cbf0a64736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 18634,
        "contract": "contracts/staking/Staking.sol:Staking",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 18637,
        "contract": "contracts/staking/Staking.sol:Staking",
        "label": "TeleportDAOToken",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 18640,
        "contract": "contracts/staking/Staking.sol:Staking",
        "label": "instantRouter",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 18643,
        "contract": "contracts/staking/Staking.sol:Staking",
        "label": "totalStakingShare",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 18648,
        "contract": "contracts/staking/Staking.sol:Staking",
        "label": "stakingShare",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 18653,
        "contract": "contracts/staking/Staking.sol:Staking",
        "label": "stakedAmount",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}