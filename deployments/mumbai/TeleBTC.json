{
  "address": "0x0783d8A18461BA80704DF8EcBc41E0eD84CFB84f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "doer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newBurner",
          "type": "address"
        }
      ],
      "name": "BurnerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        }
      ],
      "name": "BurnerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "doer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMinter",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldEpochLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newEpochLength",
          "type": "uint256"
        }
      ],
      "name": "NewEpochLength",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMintLimit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMintLimit",
          "type": "uint256"
        }
      ],
      "name": "NewMintLimit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "burners",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epochLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxmimumMintLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_length",
          "type": "uint256"
        }
      ],
      "name": "setEpochLength",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_mintLimit",
          "type": "uint256"
        }
      ],
      "name": "setMaxmimumMintLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x046de716cc77018d2d7b0a9b8658d3de52cd12b893bb2de021dcaf8f6c3e4e6f",
  "receipt": {
    "to": null,
    "from": "0x1DE72A1935Df9b4E02315BDa3C3cDbDF2A640583",
    "contractAddress": "0x0783d8A18461BA80704DF8EcBc41E0eD84CFB84f",
    "transactionIndex": 11,
    "gasUsed": "1498347",
    "logsBloom": "0x
    "blockHash": "0xf4b8e20312a72fb4386927e7981096ef11c4177d77f9ea5690c72b4267229cba",
    "transactionHash": "0x046de716cc77018d2d7b0a9b8658d3de52cd12b893bb2de021dcaf8f6c3e4e6f",
    "logs": [
      {
        "transactionIndex": 11,
        "blockNumber": 29214103,
        "transactionHash": "0x046de716cc77018d2d7b0a9b8658d3de52cd12b893bb2de021dcaf8f6c3e4e6f",
        "address": "0x0783d8A18461BA80704DF8EcBc41E0eD84CFB84f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001de72a1935df9b4e02315bda3c3cdbdf2a640583"
        ],
        "data": "0x",
        "logIndex": 30,
        "blockHash": "0xf4b8e20312a72fb4386927e7981096ef11c4177d77f9ea5690c72b4267229cba"
      },
      {
        "transactionIndex": 11,
        "blockNumber": 29214103,
        "transactionHash": "0x046de716cc77018d2d7b0a9b8658d3de52cd12b893bb2de021dcaf8f6c3e4e6f",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000001de72a1935df9b4e02315bda3c3cdbdf2a640583",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000127c6821b175c600000000000000000000000000000000000000000000000443eec6cdfd9e920e00000000000000000000000000000000000000000000277959f373653671ee6800000000000000000000000000000000000000000000000443dc4a65dbed1c480000000000000000000000000000000000000000000027795a05efcd5823642e",
        "logIndex": 31,
        "blockHash": "0xf4b8e20312a72fb4386927e7981096ef11c4177d77f9ea5690c72b4267229cba"
      }
    ],
    "blockNumber": 29214103,
    "cumulativeGasUsed": "2782229",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "TeleBitcoin",
    "TBTC"
  ],
  "numDeployments": 1,
  "solcInputHash": "75de7cb825f3b6d07e1f1f6c98977d78",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBurner\",\"type\":\"address\"}],\"name\":\"BurnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"}],\"name\":\"BurnerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldEpochLength\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newEpochLength\",\"type\":\"uint256\"}],\"name\":\"NewEpochLength\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMintLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMintLimit\",\"type\":\"uint256\"}],\"name\":\"NewMintLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"burners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastMintLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxmimumMintLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_length\",\"type\":\"uint256\"}],\"name\":\"setEpochLength\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintLimit\",\"type\":\"uint256\"}],\"name\":\"setMaxmimumMintLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addBurner(address)\":{\"details\":\"Only owner can call this function\",\"params\":{\"account\":\"The account which intended to be added to burners\"}},\"addMinter(address)\":{\"details\":\"Only owner can call this function\",\"params\":{\"account\":\"The account which intended to be added to minters\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Only burners can call this\",\"params\":{\"_amount\":\"Amount of burnt tokens\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Only minters can call this\",\"params\":{\"_amount\":\"Amount of minted tokens\",\"_receiver\":\"Address of token's receiver\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeBurner(address)\":{\"details\":\"Only owner can call this function\",\"params\":{\"account\":\"The account which intended to be removed from burners\"}},\"removeMinter(address)\":{\"details\":\"Only owner can call this function\",\"params\":{\"account\":\"The account which intended to be removed from minters\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setEpochLength(uint256)\":{\"details\":\"change blocks number per epoch.\"},\"setMaxmimumMintLimit(uint256)\":{\"details\":\"change maximum mint limit per epoch.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addBurner(address)\":{\"notice\":\"Adds a burner\"},\"addMinter(address)\":{\"notice\":\"Adds a minter\"},\"burn(uint256)\":{\"notice\":\"Burns TeleBTC tokens of msg.sender\"},\"mint(address,uint256)\":{\"notice\":\"Mints TeleBTC tokens for _receiver\"},\"removeBurner(address)\":{\"notice\":\"Removes a burner\"},\"removeMinter(address)\":{\"notice\":\"Removes a minter\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/erc20/TeleBTC.sol\":\"TeleBTC\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/erc20/TeleBTC.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.8.4;\\n\\nimport \\\"./interfaces/ITeleBTC.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ncontract TeleBTC is ITeleBTC, ERC20, Ownable, ReentrancyGuard {\\n \\n    modifier onlyMinter() {\\n        require(isMinter(_msgSender()), \\\"TeleBTC: only minters can mint\\\");\\n        _;\\n    }\\n\\n    modifier onlyBurner() {\\n        require(isBurner(_msgSender()), \\\"TeleBTC: only burners can burn\\\");\\n        _;\\n    }\\n\\n    modifier nonZeroValue(uint _value) {\\n        require(_value > 0, \\\"TeleBTC: value is zero\\\");\\n        _;\\n    }\\n\\n    // Public variables\\n    mapping(address => bool) public minters;\\n    mapping(address => bool) public burners;\\n\\n    uint public maxmimumMintLimit;      // Maximum mint limit per epoch\\n    uint public lastMintLimit;          // Current mint limit in last epoch, decrease by minting in an epoch\\n    uint public epochLength;            // Number of blocks in every epoch\\n    uint public lastEpoch;              // Epoch number of last mint transaction\\n\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol\\n    ) ERC20(_name, _symbol) {\\n        maxmimumMintLimit = 200 * 10 ** 8;\\n        lastMintLimit = 200 * 10 ** 8;\\n        epochLength = 2000;\\n    }\\n\\n    function renounceOwnership() public virtual override onlyOwner {}\\n\\n    function decimals() public view virtual override(ERC20, ITeleBTC) returns (uint8) {\\n        return 8;\\n    }\\n\\n    /**\\n     * @dev change maximum mint limit per epoch.\\n     */\\n    function setMaxmimumMintLimit(uint _mintLimit) public override onlyOwner {\\n        emit NewMintLimit(maxmimumMintLimit, _mintLimit);\\n        maxmimumMintLimit = _mintLimit;\\n    }\\n\\n    /**\\n     * @dev change blocks number per epoch.\\n     */\\n    function setEpochLength(uint _length) public override onlyOwner nonZeroValue(_length) {\\n        emit NewEpochLength(epochLength, _length);\\n        epochLength = _length;\\n    }\\n\\n    /**\\n     * @dev Check if an account is minter.\\n     * @return bool\\n     */\\n    function isMinter(address account) internal view returns (bool) {\\n        require(account != address(0), \\\"TeleBTC: account is the zero address\\\");\\n        return minters[account];\\n    }\\n\\n    /// @notice                Check if an account is burner    \\n    /// @param  account        The account which intended to be checked\\n    /// @return bool\\n    function isBurner(address account) internal view returns (bool) {\\n        require(account != address(0), \\\"TeleBTC: account is the zero address\\\");\\n        return burners[account];\\n    }\\n\\n    /// @notice                Adds a minter\\n    /// @dev                   Only owner can call this function\\n    /// @param  account        The account which intended to be added to minters\\n    function addMinter(address account) external override onlyOwner {\\n        require(!isMinter(account), \\\"TeleBTC: account already has role\\\");\\n        minters[account] = true;\\n        emit MinterAdded(account);\\n    }\\n\\n    /// @notice                Removes a minter\\n    /// @dev                   Only owner can call this function\\n    /// @param  account        The account which intended to be removed from minters\\n    function removeMinter(address account) external override onlyOwner {\\n        require(isMinter(account), \\\"TeleBTC: account does not have role\\\");\\n        minters[account] = false;\\n        emit MinterRemoved(account);\\n    }\\n\\n    /// @notice                Adds a burner\\n    /// @dev                   Only owner can call this function\\n    /// @param  account        The account which intended to be added to burners\\n    function addBurner(address account) external override onlyOwner {\\n        require(!isBurner(account), \\\"TeleBTC: account already has role\\\");\\n        burners[account] = true;\\n        emit BurnerAdded(account);\\n    }\\n\\n    /// @notice                Removes a burner\\n    /// @dev                   Only owner can call this function\\n    /// @param  account        The account which intended to be removed from burners\\n    function removeBurner(address account) external override onlyOwner {\\n        require(isBurner(account), \\\"TeleBTC: account does not have role\\\");\\n        burners[account] = false;\\n        emit BurnerRemoved(account);\\n    }\\n\\n    /// @notice                Burns TeleBTC tokens of msg.sender\\n    /// @dev                   Only burners can call this\\n    /// @param _amount         Amount of burnt tokens\\n    function burn(uint _amount) external nonReentrant onlyBurner override returns (bool) {\\n        _burn(_msgSender(), _amount);\\n        emit Burn(_msgSender(), _msgSender(), _amount);\\n        return true;\\n    }\\n\\n    /// @notice                Mints TeleBTC tokens for _receiver\\n    /// @dev                   Only minters can call this\\n    /// @param _receiver       Address of token's receiver\\n    /// @param _amount         Amount of minted tokens\\n    function mint(address _receiver, uint _amount) external nonReentrant onlyMinter override returns (bool) {\\n        require(_amount <= maxmimumMintLimit, \\\"TeleBTC: mint amount is more than maximum mint limit\\\");\\n        require(checkAndReduceMintLimit(_amount) == true, \\\"TeleBTC: reached maximum mint limit\\\");\\n\\n        _mint(_receiver, _amount);\\n        emit Mint(_msgSender(), _receiver, _amount);\\n        return true;\\n    }\\n\\n    /// @notice                Check if can mint new tokens and update mint limit\\n    /// @param _amount         Desired mint amount\\n    function checkAndReduceMintLimit(uint _amount) private returns (bool) {\\n        uint currentEpoch = block.number / epochLength;\\n        \\n        if (currentEpoch == lastEpoch) {\\n            if (_amount > lastMintLimit)\\n                return false;\\n            lastMintLimit -= _amount;\\n        } else {\\n            lastEpoch = currentEpoch;\\n            lastMintLimit = maxmimumMintLimit - _amount;\\n        }\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x815e08c196a911010f935387b842decc6819794a7a64db762039a7d7323e3e2b\",\"license\":\"MIT\"},\"contracts/erc20/interfaces/ITeleBTC.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ITeleBTC is IERC20 {\\n\\n    // Events\\n    event Mint(address indexed doer, address indexed receiver, uint value);\\n\\n    event Burn(address indexed doer, address indexed burner, uint value);\\n\\n    event MinterAdded(address indexed newMinter);\\n\\n    event MinterRemoved(address indexed minter);\\n\\n    event BurnerAdded(address indexed newBurner);\\n\\n    event BurnerRemoved(address indexed burner);\\n\\n    event NewMintLimit(uint oldMintLimit, uint newMintLimit);\\n\\n    event NewEpochLength(uint oldEpochLength, uint newEpochLength);\\n\\n    // read functions\\n\\n    function decimals() external view returns (uint8);\\n\\n    // state-changing functions\\n\\n    function addMinter(address account) external;\\n\\n    function removeMinter(address account) external;\\n\\n    function addBurner(address account) external;\\n\\n    function removeBurner(address account) external;\\n\\n    function mint(address receiver, uint amount) external returns(bool);\\n\\n    function burn(uint256 amount) external returns(bool);\\n\\n    function setMaxmimumMintLimit(uint _mintLimit) external;\\n\\n    function setEpochLength(uint _length) external;\\n}\",\"keccak256\":\"0x9db4603a130e2613ac9cd1fcb45f16960fce1d08cc1200a8c6c899dcaa1b4e7e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001a2338038062001a23833981016040819052620000349162000250565b8151829082906200004d906003906020850190620000f7565b50805162000063906004906020840190620000f7565b505050620000806200007a620000a160201b60201c565b620000a5565b505060016006556404a817c8006009819055600a556107d0600b556200030a565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010590620002b7565b90600052602060002090601f01602090048101928262000129576000855562000174565b82601f106200014457805160ff191683800117855562000174565b8280016001018555821562000174579182015b828111156200017457825182559160200191906001019062000157565b506200018292915062000186565b5090565b5b8082111562000182576000815560010162000187565b600082601f830112620001ae578081fd5b81516001600160401b0380821115620001cb57620001cb620002f4565b604051601f8301601f19908116603f01168101908282118183101715620001f657620001f6620002f4565b8160405283815260209250868385880101111562000212578485fd5b8491505b8382101562000235578582018301518183018401529082019062000216565b838211156200024657848385830101525b9695505050505050565b6000806040838503121562000263578182fd5b82516001600160401b03808211156200027a578384fd5b62000288868387016200019d565b935060208501519150808211156200029e578283fd5b50620002ad858286016200019d565b9150509250929050565b600281046001821680620002cc57607f821691505b60208210811415620002ee57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611709806200031a6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806357d775f8116100f9578063983b2d5611610097578063dd62ed3e11610071578063dd62ed3e14610383578063f2fde38b146103bc578063f44637ba146103cf578063f46eccc4146103e2576101c4565b8063983b2d561461034a578063a457c2d71461035d578063a9059cbb14610370576101c4565b8063715018a6116100d3578063715018a61461030c5780637714b366146103145780638da5cb5b1461032757806395d89b4114610342576101c4565b806357d775f8146102e75780635cbae7b6146102f057806370a08231146102f9576101c4565b80632f99582a116101665780633950935111610140578063395093511461029b57806340c10f19146102ae57806342966c68146102c157806354eea796146102d4576101c4565b80632f99582a146102705780633092afd514610279578063313ce5671461028c576101c4565b806306fdde03116101a257806306fdde031461022d578063095ea7b31461024257806318160ddd1461025557806323b872dd1461025d576101c4565b806302846858146101c957806303d41e0e146101de57806306a4c98314610216575b600080fd5b6101dc6101d7366004611414565b610405565b005b6102016101ec366004611414565b60086020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61021f600c5481565b60405190815260200161020d565b6102356104a6565b60405161020d91906114e3565b6102016102503660046114a2565b610538565b60025461021f565b61020161026b366004611467565b61054e565b61021f600a5481565b6101dc610287366004611414565b6105f8565b6040516008815260200161020d565b6102016102a93660046114a2565b610690565b6102016102bc3660046114a2565b6106cc565b6102016102cf3660046114cb565b6108a7565b6101dc6102e23660046114cb565b6109a3565b61021f600b5481565b61021f60095481565b61021f610307366004611414565b610a59565b6101dc610a78565b6101dc6103223660046114cb565b610aa4565b6005546040516001600160a01b03909116815260200161020d565b610235610b0f565b6101dc610358366004611414565b610b1e565b61020161036b3660046114a2565b610bba565b61020161037e3660046114a2565b610c53565b61021f610391366004611435565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101dc6103ca366004611414565b610c60565b6101dc6103dd366004611414565b610cfb565b6102016103f0366004611414565b60076020526000908152604090205460ff1681565b6005546001600160a01b031633146104385760405162461bcd60e51b815260040161042f906115bd565b60405180910390fd5b61044181610d97565b61045d5760405162461bcd60e51b815260040161042f9061157a565b6001600160a01b038116600081815260086020526040808220805460ff19169055517f90eabbc0c667db2a5029ed6bc0f5fe9f356d11684a4ca9fcfaec0e53f12b9c8e9190a250565b6060600380546104b590611682565b80601f01602080910402602001604051908101604052809291908181526020018280546104e190611682565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b6000610545338484610dde565b50600192915050565b600061055b848484610f03565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105e05760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161042f565b6105ed8533858403610dde565b506001949350505050565b6005546001600160a01b031633146106225760405162461bcd60e51b815260040161042f906115bd565b61062b816110d2565b6106475760405162461bcd60e51b815260040161042f9061157a565b6001600160a01b038116600081815260076020526040808220805460ff19169055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a250565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916105459185906106c7908690611633565b610dde565b6000600260065414156107215760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161042f565b600260065561072f336110d2565b61077b5760405162461bcd60e51b815260206004820152601e60248201527f54656c654254433a206f6e6c79206d696e746572732063616e206d696e740000604482015260640161042f565b6009548211156107ea5760405162461bcd60e51b815260206004820152603460248201527f54656c654254433a206d696e7420616d6f756e74206973206d6f7265207468616044820152731b881b585e1a5b5d5b481b5a5b9d081b1a5b5a5d60621b606482015260840161042f565b6107f382611119565b15156001146108505760405162461bcd60e51b815260206004820152602360248201527f54656c654254433a2072656163686564206d6178696d756d206d696e74206c696044820152621b5a5d60ea1b606482015260840161042f565b61085a8383611186565b6040518281526001600160a01b0384169033907fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f89060200160405180910390a35060018060065592915050565b6000600260065414156108fc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161042f565b600260065561090a33610d97565b6109565760405162461bcd60e51b815260206004820152601e60248201527f54656c654254433a206f6e6c79206275726e6572732063616e206275726e0000604482015260640161042f565b6109603383611265565b604051828152339081907fbac40739b0d4ca32fa2d82fc91630465ba3eddd1598da6fca393b26fb63b94539060200160405180910390a350600180600655919050565b6005546001600160a01b031633146109cd5760405162461bcd60e51b815260040161042f906115bd565b8060008111610a175760405162461bcd60e51b815260206004820152601660248201527554656c654254433a2076616c7565206973207a65726f60501b604482015260640161042f565b600b5460408051918252602082018490527fd077b1717c042dc03e7eb68030220b62f703db305be2ffb5b9e1d91b639a63f9910160405180910390a150600b55565b6001600160a01b0381166000908152602081905260409020545b919050565b6005546001600160a01b03163314610aa25760405162461bcd60e51b815260040161042f906115bd565b565b6005546001600160a01b03163314610ace5760405162461bcd60e51b815260040161042f906115bd565b60095460408051918252602082018390527f36ab29917278ebced3c63670f7872f78555ed7cdb4aa5184a159eb978be79508910160405180910390a1600955565b6060600480546104b590611682565b6005546001600160a01b03163314610b485760405162461bcd60e51b815260040161042f906115bd565b610b51816110d2565b15610b6e5760405162461bcd60e51b815260040161042f906115f2565b6001600160a01b038116600081815260076020526040808220805460ff19166001179055517f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f69190a250565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610c3c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161042f565b610c493385858403610dde565b5060019392505050565b6000610545338484610f03565b6005546001600160a01b03163314610c8a5760405162461bcd60e51b815260040161042f906115bd565b6001600160a01b038116610cef5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042f565b610cf8816113ab565b50565b6005546001600160a01b03163314610d255760405162461bcd60e51b815260040161042f906115bd565b610d2e81610d97565b15610d4b5760405162461bcd60e51b815260040161042f906115f2565b6001600160a01b038116600081815260086020526040808220805460ff19166001179055517f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b945609190a250565b60006001600160a01b038216610dbf5760405162461bcd60e51b815260040161042f90611536565b506001600160a01b031660009081526008602052604090205460ff1690565b6001600160a01b038316610e405760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161042f565b6001600160a01b038216610ea15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161042f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610f675760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161042f565b6001600160a01b038216610fc95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161042f565b6001600160a01b038316600090815260208190526040902054818110156110415760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161042f565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611078908490611633565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110c491815260200190565b60405180910390a350505050565b60006001600160a01b0382166110fa5760405162461bcd60e51b815260040161042f90611536565b506001600160a01b031660009081526007602052604090205460ff1690565b600080600b544361112a919061164b565b9050600c5481141561116757600a5483111561114a576000915050610a73565b82600a600082825461115c919061166b565b909155506105459050565b600c81905560095461117a90849061166b565b600a5550600192915050565b6001600160a01b0382166111dc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161042f565b80600260008282546111ee9190611633565b90915550506001600160a01b0382166000908152602081905260408120805483929061121b908490611633565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166112c55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161042f565b6001600160a01b038216600090815260208190526040902054818110156113395760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161042f565b6001600160a01b038316600090815260208190526040812083830390556002805484929061136890849061166b565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ef6565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610a7357600080fd5b600060208284031215611425578081fd5b61142e826113fd565b9392505050565b60008060408385031215611447578081fd5b611450836113fd565b915061145e602084016113fd565b90509250929050565b60008060006060848603121561147b578081fd5b611484846113fd565b9250611492602085016113fd565b9150604084013590509250925092565b600080604083850312156114b4578182fd5b6114bd836113fd565b946020939093013593505050565b6000602082840312156114dc578081fd5b5035919050565b6000602080835283518082850152825b8181101561150f578581018301518582016040015282016114f3565b818111156115205783604083870101525b50601f01601f1916929092016040019392505050565b60208082526024908201527f54656c654254433a206163636f756e7420697320746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526023908201527f54656c654254433a206163636f756e7420646f6573206e6f74206861766520726040820152626f6c6560e81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f54656c654254433a206163636f756e7420616c72656164792068617320726f6c6040820152606560f81b606082015260800190565b60008219821115611646576116466116bd565b500190565b60008261166657634e487b7160e01b81526012600452602481fd5b500490565b60008282101561167d5761167d6116bd565b500390565b60028104600182168061169657607f821691505b602082108114156116b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220047a9802f1eeb55b53baf8fd352a9774668d47d22f0877772c26a111d5b2433a64736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c806357d775f8116100f9578063983b2d5611610097578063dd62ed3e11610071578063dd62ed3e14610383578063f2fde38b146103bc578063f44637ba146103cf578063f46eccc4146103e2576101c4565b8063983b2d561461034a578063a457c2d71461035d578063a9059cbb14610370576101c4565b8063715018a6116100d3578063715018a61461030c5780637714b366146103145780638da5cb5b1461032757806395d89b4114610342576101c4565b806357d775f8146102e75780635cbae7b6146102f057806370a08231146102f9576101c4565b80632f99582a116101665780633950935111610140578063395093511461029b57806340c10f19146102ae57806342966c68146102c157806354eea796146102d4576101c4565b80632f99582a146102705780633092afd514610279578063313ce5671461028c576101c4565b806306fdde03116101a257806306fdde031461022d578063095ea7b31461024257806318160ddd1461025557806323b872dd1461025d576101c4565b806302846858146101c957806303d41e0e146101de57806306a4c98314610216575b600080fd5b6101dc6101d7366004611414565b610405565b005b6102016101ec366004611414565b60086020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61021f600c5481565b60405190815260200161020d565b6102356104a6565b60405161020d91906114e3565b6102016102503660046114a2565b610538565b60025461021f565b61020161026b366004611467565b61054e565b61021f600a5481565b6101dc610287366004611414565b6105f8565b6040516008815260200161020d565b6102016102a93660046114a2565b610690565b6102016102bc3660046114a2565b6106cc565b6102016102cf3660046114cb565b6108a7565b6101dc6102e23660046114cb565b6109a3565b61021f600b5481565b61021f60095481565b61021f610307366004611414565b610a59565b6101dc610a78565b6101dc6103223660046114cb565b610aa4565b6005546040516001600160a01b03909116815260200161020d565b610235610b0f565b6101dc610358366004611414565b610b1e565b61020161036b3660046114a2565b610bba565b61020161037e3660046114a2565b610c53565b61021f610391366004611435565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101dc6103ca366004611414565b610c60565b6101dc6103dd366004611414565b610cfb565b6102016103f0366004611414565b60076020526000908152604090205460ff1681565b6005546001600160a01b031633146104385760405162461bcd60e51b815260040161042f906115bd565b60405180910390fd5b61044181610d97565b61045d5760405162461bcd60e51b815260040161042f9061157a565b6001600160a01b038116600081815260086020526040808220805460ff19169055517f90eabbc0c667db2a5029ed6bc0f5fe9f356d11684a4ca9fcfaec0e53f12b9c8e9190a250565b6060600380546104b590611682565b80601f01602080910402602001604051908101604052809291908181526020018280546104e190611682565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b6000610545338484610dde565b50600192915050565b600061055b848484610f03565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105e05760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161042f565b6105ed8533858403610dde565b506001949350505050565b6005546001600160a01b031633146106225760405162461bcd60e51b815260040161042f906115bd565b61062b816110d2565b6106475760405162461bcd60e51b815260040161042f9061157a565b6001600160a01b038116600081815260076020526040808220805460ff19169055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a250565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916105459185906106c7908690611633565b610dde565b6000600260065414156107215760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161042f565b600260065561072f336110d2565b61077b5760405162461bcd60e51b815260206004820152601e60248201527f54656c654254433a206f6e6c79206d696e746572732063616e206d696e740000604482015260640161042f565b6009548211156107ea5760405162461bcd60e51b815260206004820152603460248201527f54656c654254433a206d696e7420616d6f756e74206973206d6f7265207468616044820152731b881b585e1a5b5d5b481b5a5b9d081b1a5b5a5d60621b606482015260840161042f565b6107f382611119565b15156001146108505760405162461bcd60e51b815260206004820152602360248201527f54656c654254433a2072656163686564206d6178696d756d206d696e74206c696044820152621b5a5d60ea1b606482015260840161042f565b61085a8383611186565b6040518281526001600160a01b0384169033907fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f89060200160405180910390a35060018060065592915050565b6000600260065414156108fc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161042f565b600260065561090a33610d97565b6109565760405162461bcd60e51b815260206004820152601e60248201527f54656c654254433a206f6e6c79206275726e6572732063616e206275726e0000604482015260640161042f565b6109603383611265565b604051828152339081907fbac40739b0d4ca32fa2d82fc91630465ba3eddd1598da6fca393b26fb63b94539060200160405180910390a350600180600655919050565b6005546001600160a01b031633146109cd5760405162461bcd60e51b815260040161042f906115bd565b8060008111610a175760405162461bcd60e51b815260206004820152601660248201527554656c654254433a2076616c7565206973207a65726f60501b604482015260640161042f565b600b5460408051918252602082018490527fd077b1717c042dc03e7eb68030220b62f703db305be2ffb5b9e1d91b639a63f9910160405180910390a150600b55565b6001600160a01b0381166000908152602081905260409020545b919050565b6005546001600160a01b03163314610aa25760405162461bcd60e51b815260040161042f906115bd565b565b6005546001600160a01b03163314610ace5760405162461bcd60e51b815260040161042f906115bd565b60095460408051918252602082018390527f36ab29917278ebced3c63670f7872f78555ed7cdb4aa5184a159eb978be79508910160405180910390a1600955565b6060600480546104b590611682565b6005546001600160a01b03163314610b485760405162461bcd60e51b815260040161042f906115bd565b610b51816110d2565b15610b6e5760405162461bcd60e51b815260040161042f906115f2565b6001600160a01b038116600081815260076020526040808220805460ff19166001179055517f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f69190a250565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610c3c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161042f565b610c493385858403610dde565b5060019392505050565b6000610545338484610f03565b6005546001600160a01b03163314610c8a5760405162461bcd60e51b815260040161042f906115bd565b6001600160a01b038116610cef5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042f565b610cf8816113ab565b50565b6005546001600160a01b03163314610d255760405162461bcd60e51b815260040161042f906115bd565b610d2e81610d97565b15610d4b5760405162461bcd60e51b815260040161042f906115f2565b6001600160a01b038116600081815260086020526040808220805460ff19166001179055517f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b945609190a250565b60006001600160a01b038216610dbf5760405162461bcd60e51b815260040161042f90611536565b506001600160a01b031660009081526008602052604090205460ff1690565b6001600160a01b038316610e405760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161042f565b6001600160a01b038216610ea15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161042f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610f675760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161042f565b6001600160a01b038216610fc95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161042f565b6001600160a01b038316600090815260208190526040902054818110156110415760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161042f565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611078908490611633565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110c491815260200190565b60405180910390a350505050565b60006001600160a01b0382166110fa5760405162461bcd60e51b815260040161042f90611536565b506001600160a01b031660009081526007602052604090205460ff1690565b600080600b544361112a919061164b565b9050600c5481141561116757600a5483111561114a576000915050610a73565b82600a600082825461115c919061166b565b909155506105459050565b600c81905560095461117a90849061166b565b600a5550600192915050565b6001600160a01b0382166111dc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161042f565b80600260008282546111ee9190611633565b90915550506001600160a01b0382166000908152602081905260408120805483929061121b908490611633565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166112c55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161042f565b6001600160a01b038216600090815260208190526040902054818110156113395760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161042f565b6001600160a01b038316600090815260208190526040812083830390556002805484929061136890849061166b565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ef6565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610a7357600080fd5b600060208284031215611425578081fd5b61142e826113fd565b9392505050565b60008060408385031215611447578081fd5b611450836113fd565b915061145e602084016113fd565b90509250929050565b60008060006060848603121561147b578081fd5b611484846113fd565b9250611492602085016113fd565b9150604084013590509250925092565b600080604083850312156114b4578182fd5b6114bd836113fd565b946020939093013593505050565b6000602082840312156114dc578081fd5b5035919050565b6000602080835283518082850152825b8181101561150f578581018301518582016040015282016114f3565b818111156115205783604083870101525b50601f01601f1916929092016040019392505050565b60208082526024908201527f54656c654254433a206163636f756e7420697320746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526023908201527f54656c654254433a206163636f756e7420646f6573206e6f74206861766520726040820152626f6c6560e81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f54656c654254433a206163636f756e7420616c72656164792068617320726f6c6040820152606560f81b606082015260800190565b60008219821115611646576116466116bd565b500190565b60008261166657634e487b7160e01b81526012600452602481fd5b500490565b60008282101561167d5761167d6116bd565b500390565b60028104600182168061169657607f821691505b602082108114156116b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220047a9802f1eeb55b53baf8fd352a9774668d47d22f0877772c26a111d5b2433a64736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addBurner(address)": {
        "details": "Only owner can call this function",
        "params": {
          "account": "The account which intended to be added to burners"
        }
      },
      "addMinter(address)": {
        "details": "Only owner can call this function",
        "params": {
          "account": "The account which intended to be added to minters"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Only burners can call this",
        "params": {
          "_amount": "Amount of burnt tokens"
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Only minters can call this",
        "params": {
          "_amount": "Amount of minted tokens",
          "_receiver": "Address of token's receiver"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeBurner(address)": {
        "details": "Only owner can call this function",
        "params": {
          "account": "The account which intended to be removed from burners"
        }
      },
      "removeMinter(address)": {
        "details": "Only owner can call this function",
        "params": {
          "account": "The account which intended to be removed from minters"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setEpochLength(uint256)": {
        "details": "change blocks number per epoch."
      },
      "setMaxmimumMintLimit(uint256)": {
        "details": "change maximum mint limit per epoch."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addBurner(address)": {
        "notice": "Adds a burner"
      },
      "addMinter(address)": {
        "notice": "Adds a minter"
      },
      "burn(uint256)": {
        "notice": "Burns TeleBTC tokens of msg.sender"
      },
      "mint(address,uint256)": {
        "notice": "Mints TeleBTC tokens for _receiver"
      },
      "removeBurner(address)": {
        "notice": "Removes a burner"
      },
      "removeMinter(address)": {
        "notice": "Removes a minter"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1679,
        "contract": "contracts/erc20/TeleBTC.sol:TeleBTC",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1685,
        "contract": "contracts/erc20/TeleBTC.sol:TeleBTC",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 1687,
        "contract": "contracts/erc20/TeleBTC.sol:TeleBTC",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1689,
        "contract": "contracts/erc20/TeleBTC.sol:TeleBTC",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 1691,
        "contract": "contracts/erc20/TeleBTC.sol:TeleBTC",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 807,
        "contract": "contracts/erc20/TeleBTC.sol:TeleBTC",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1634,
        "contract": "contracts/erc20/TeleBTC.sol:TeleBTC",
        "label": "_status",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 4503,
        "contract": "contracts/erc20/TeleBTC.sol:TeleBTC",
        "label": "minters",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4507,
        "contract": "contracts/erc20/TeleBTC.sol:TeleBTC",
        "label": "burners",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4509,
        "contract": "contracts/erc20/TeleBTC.sol:TeleBTC",
        "label": "maxmimumMintLimit",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 4511,
        "contract": "contracts/erc20/TeleBTC.sol:TeleBTC",
        "label": "lastMintLimit",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 4513,
        "contract": "contracts/erc20/TeleBTC.sol:TeleBTC",
        "label": "epochLength",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 4515,
        "contract": "contracts/erc20/TeleBTC.sol:TeleBTC",
        "label": "lastEpoch",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}